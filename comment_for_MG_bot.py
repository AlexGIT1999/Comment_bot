import logging
import json
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open('config.json', 'r', encoding='utf-8') as f:
    config = json.load(f)

BOT_TOKEN = config['bot_token']
CHANNEL_ID = config['channel_id']
RULES_TEXT = config['rules_text']

async def handle_channel_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏"""
    try:
        message = update.message
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ 777000 –∏ sender_chat –Ω–∞—à –∫–∞–Ω–∞–ª
        if (message.from_user and 
            message.from_user.id == 777000 and 
            hasattr(message, 'sender_chat') and 
            message.sender_chat and 
            message.sender_chat.id == CHANNEL_ID):
            
            logger.info("‚úÖ –≠—Ç–æ –ø–æ—Å—Ç –∏–∑ –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –ø–æ—Å—Ç (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π) —Å HTML —Ä–∞–∑–º–µ—Ç–∫–æ–π
            rules_message = await message.reply_text(RULES_TEXT, parse_mode='HTML')
            
            # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º –Ω–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            await context.bot.pin_chat_message(
                chat_id=message.chat.id,
                message_id=rules_message.message_id,
                disable_notification=True
            )
            
            logger.info("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω!")
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(MessageHandler(filters.ALL, handle_channel_post))
    
    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    logger.info("üìù –û–ø—É–±–ª–∏–∫—É–π—Ç–µ –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    application.run_polling()

if __name__ == "__main__":
    main()